Alice is a kindergarten teacher. She wants to give some candies to the children in her class.  All the children sit in a line and each of them has a rating score according to his or her performance in the class.  Alice wants to give at least 1 candy to each child. If two children sit next to each other, then the one with the higher rating must get more candies. Alice wants to minimize the total number of candies she must buy.
Sample Input 0:
3
1
2
2
Sample Output 0

4
Explanation 0

Here 1, 2, 2 is the rating. Note that when two children have equal rating, they are allowed to have different number of candies. Hence optimal distribution will be 1, 2, 1.
https://www.hackerrank.com/challenges/candies/problem
#include <bits/stdc++.h>
#define vinh ios::sync_with_stdio(false);cin.tie(nullptr);
//#define anonymous main
//#define int long long
#define my_for(i,a,b) for(int i=a;i<b;i++)
#define my_For(i,a,b) for(int i=a;i>=b;i--)
#define foreach(x,a) for(auto x:a)
#define forEach(x,a) for(auto &x:a)
using ll=long long;
using namespace std;
int main()
{
    vinh
    int n;cin>>n;
    ll a[n];
    forEach(x,a) cin>>x;
    ll truoc[n]={1};
    my_for(i,1,n)
    {
        if(a[i]>a[i-1])
            truoc[i]=truoc[i-1]+1;
        else truoc[i]=1;
    }
    ll sau[n]={0};
    sau[n-1]=truoc[n-1];
    my_For(i,n-2,0)
    {
        if(a[i]<a[i+1]&&truoc[i]>=sau[i+1]) sau[i]=sau[i+1]-1;
        else if(a[i]>a[i+1]&&truoc[i]<=sau[i+1]) sau[i]=sau[i+1]+1;
        else sau[i]=truoc[i];
    }
    ll sum=0;
    foreach(x,sau) sum+=x;
    cout<<sum;
}
