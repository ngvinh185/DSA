Giả sử bạn là một người nghèo trong địa phương của bạn. Địa phương của bạn có
duy nhất một cửa hàng bán lương thực. Cửa hàng của bạn mở cửa tất cả các
ngày trong tuần ngoại trừ chủ nhật. Cho bộ ba số N, S, M thỏa mãn ràng buộc
sau: N : số đơn vị lương thực nhiều nhất bạn có thể mua trong ngày. S : số lượng
ngày bạn cần được sử dụng lương thực để tồn tại. M : số đơn vị lương thực cần có
mỗi ngày để bạn tồn tại. Giả sử bạn đang ở ngày thứ 2 trong tuần và cần tồn tại
trong S ngày tới. Hãy cho biết số lượng ngày ít nhất bạn cần phải mua lương thực
từ của hàng để tồn tại hoặc bạn sẽ bị chết đói trong S ngày tới.
Input Format
1 dòng chứa 3 số N, S, M
Constraints
1<=S,N,M<=100
Output Format
In ra số ngày ít nhất cần mua lương thực, nếu không thể mua đủ lương thực để
tồn tại thì in ra -1
Sample Input 0
7 5 7
Sample Output 0
5
#include <bits/stdc++.h>
#define vinh ios::sync_with_stdio(false);cin.tie(nullptr);
#define anonymous main
#define int long long
#define my_for(i,a,b) for(int i=a;i<b;i++)
#define my_For(i,a,b) for(int i=a;i>=b;i--)
#define foreach(x,a) for(auto x:a)
#define forEach(x,a) for(auto &x:a)
using namespace std;
anonymous()
{
	vinh
	int n,s,m;cin>>n>>s>>m;
	int ngayDiCho=s-(s/7);
	int soLuongThucCan=s*m;
	if(ngayDiCho*n<soLuongThucCan) 
	{
		cout<<-1;return 0;
	}
	int soNgayItNhat=(soLuongThucCan+n-1)/n; //if(soLuongThucCan%n==0) soNgayItNhat=soLuongThucCan/n ; else (soLuongThucCan%n!=0) soNgayItNhat=soLuongThucCan/n +1 
	cout<<soNgayItNhat;
}
