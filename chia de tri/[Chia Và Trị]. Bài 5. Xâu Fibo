Xâu S chỉ bao gồm các kí tự A và B được gọi là xâu Fibonacci nếu S(1) = 'A', S(2) = 'B', S(n) = S(n - 2) + S(n - 1), trong đó phép + là phép nối 2 xâu. Bài toán đặt ra là tìm kí tự thứ K trong xâu fibonacci thứ N.
Input Format
Dòng duy nhất chứa 2 số N và K
Constraints
1<=N<=92; 1<=K<=7e18 và đảm bảo là vị trí hợp lệ trong xâu fibonacci thứ N
Output Format
In ra kí tự tìm được
Sample Input 0
5 3
Sample Output 0
B
#include <bits/stdc++.h>
#define vinh ios::sync_with_stdio(false);cin.tie(nullptr);
#define anonymous main
#define int long long
#define my_for(i,a,b) for(int i=a;i<b;i++)
#define my_For(i,a,b) for(int i=a;i>=b;i--)
#define foreach(x,a) for(auto x:a)
#define forEach(x,a) for(auto &x:a)
using namespace std;
int F[94];
void fibo()
{
	F[1]=1,F[2]=1;
	my_for(i,3,93)
	{
		F[i]=F[i-1]+F[i-2];
	}
}
char np(int n,int k)
{
	if(n==1) return 'A';
	if(n==2) return 'B';
	if(k>F[n-2]) return np(n-1,k-F[n-2]);
	else return np(n-2,k);
}
anonymous()
{
	vinh
	fibo();
	int n,k;cin>>n>>k;
	cout<<np(n,k);
}
