Cho mảng đã được sắp xếp A[] gồm N phần tử không có hai phần tử giống nhau và số X. Nhiệm vụ của bạn là tìm floor(X). Trong đó, K=floor(X) là phần tử lớn nhất trong mảng A[] nhỏ hơn hoặc bằng X.
Input Format
Dòng 1 chứa 2 số N và X; Dòng 2 chứa N số của mảng A[]
Constraints
1<=N<=10^5; 1<=X,A[i]<=10^6;
Output Format
In ra đáp án của bài toán nếu tìm thấy số lớn hơn X, trường hợp không tìm thấy in -1
Sample Input 0
9 8
1 2 3 4 5 6 7 8 9 
Sample Output 0
8

#include <bits/stdc++.h>
#define vinh ios::sync_with_stdio(false);cin.tie(nullptr);
#define anonymous main
#define int long long
#define my_for(i,a,b) for(int i=a;i<b;i++)
#define my_For(i,a,b) for(int i=a;i>=b;i--)
#define foreach(x,a) for(auto x:a)
#define forEach(x,a) for(auto &x:a)
using namespace std;
int check=0;
int bs(int a[],int l,int r,int k)
{
	if(l<r)
	{
		int m=(l+r)/2;
		int x=bs(a,l,m,k);
		int y=bs(a,m+1,r,k);
		return max(x,y);
	}
	else 
	{
		if(a[l]<=k) 
		{
			check=1;
			return a[l];
		}
		else return -1e9;
	}
}
anonymous()
{
	vinh
	int n,k;cin>>n>>k;
	int a[n];forEach(x,a) cin>>x;
	int t=bs(a,0,n-1,k);
	if(check==0) cout<<-1;
	else cout<<t;
}
