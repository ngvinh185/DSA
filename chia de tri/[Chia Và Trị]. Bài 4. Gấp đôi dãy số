Một dãy số tự nhiên bắt đầu bởi con số 1 và được thực hiện N-1 phép biến đổi “gấp đôi” dãy số như sau: Với dãy số A hiện tại, dãy số mới có dạng A, x, A trong đó x là số tự nhiên bé nhất chưa xuất hiện trong A.
Ví dụ với 2 bước biến đổi, ta có [1] - [1 2 1] - [1 2 1 3 1 2 1].
Các bạn hãy xác định số thứ K trong dãy số cuối cùng là bao nhiêu?
Input Format
Dòng duy nhất chứa 2 số nguyên dương N và K
Constraints
1<=N<=50; 1<=K<=2^N - 1
Output Format
In ra đáp án của bài toán
Sample Input 0
3 2
Sample Output 0
2
#include <bits/stdc++.h>
#define vinh ios::sync_with_stdio(false);cin.tie(nullptr);
#define anonymous main
#define int long long
#define my_for(i,a,b) for(int i=a;i<b;i++)
#define my_For(i,a,b) for(int i=a;i>=b;i--)
#define foreach(x,a) for(auto x:a)
#define forEach(x,a) for(auto &x:a)
using namespace std;

int ds(int n,int k)
{
	if(k==pow(2,n-1))
	{
		return n;
	}
	if(k>pow(2,n-1)) return ds(n-1,k-pow(2,n-1));
	else return ds(n-1,k);
}
anonymous()
{
	vinh
	int n,k;cin>>n>>k;
	cout<<ds(n,k);
}
